[
  {
    "name": "DCLOUD CATC Template Lab DayN Jinja2",
    "tags": [],
    "templates": [
      {
        "name": "Stacking-Configuration",
        "description": "",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{#- 9300 Stack Power and 9300, 9200 Priority -#}\n{% set StackCount = __device.platformId | split(\",\")  %}\n{% set StackMemberCount =  StackCount | length  -%}\n\n{% if StackMemberCount > 1 && (\"C93\" in __device.platformId || \"C92\" in __device.platformId) %}\n  {% if \"C93\" in __device.platformId %}\n     stack-power stack Powerstack1\n     mode redundant strict\n     {% if StackMemberCount > 4 %}\n        stack-power stack Powerstack2\n        mode redundant strict\n     {% endif %}\n     {% for Switch in range(0,StackMemberCount,1) %}\n        stack-power switch {{ loop.index }}\n        {% if loop.index <= (StackMemberCount/2|round('ceil')) or StackMemberCount < 5 %}\n           stack Powerstack1\n        {% elif loop.index > (StackMemberCount/2|round('ceil')) %}\n           stack Powerstack2\n        {% endif %}\n     {% endfor %}\n  {% endif %}\n  #MODE_ENABLE\n  {% for Switch in range(0,StackMemberCount,1) %}\n    {% if loop.index == 1 %}\n       switch {{ loop.index }} priority 10\n    {% elif loop.index == 2 %}\n       switch {{ loop.index }} priority 9\n    {% else %}\n       switch {{ loop.index }} priority 8\n    {% endif %}\n  {% endfor %}\n  #MODE_END_ENABLE\n{% endif %}",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{#- 9300 Stack Power and 9300, 9200 Priority -#}\n{% set StackCount = __device.platformId | split(\",\")  %}\n{% set StackMemberCount =  StackCount | length  -%}\n\n{% if StackMemberCount > 1 && (\"C93\" in __device.platformId || \"C92\" in __device.platformId) %}\n  {% if \"C93\" in __device.platformId %}\n     stack-power stack Powerstack1\n     mode redundant strict\n     {% if StackMemberCount > 4 %}\n        stack-power stack Powerstack2\n        mode redundant strict\n     {% endif %}\n     {% for Switch in range(0,StackMemberCount,1) %}\n        stack-power switch {{ loop.index }}\n        {% if loop.index <= (StackMemberCount/2|round('ceil')) or StackMemberCount < 5 %}\n           stack Powerstack1\n        {% elif loop.index > (StackMemberCount/2|round('ceil')) %}\n           stack Powerstack2\n        {% endif %}\n     {% endfor %}\n  {% endif %}\n  #MODE_ENABLE\n  {% for Switch in range(0,StackMemberCount,1) %}\n    {% if loop.index == 1 %}\n       switch {{ loop.index }} priority 10\n    {% elif loop.index == 2 %}\n       switch {{ loop.index }} priority 9\n    {% else %}\n       switch {{ loop.index }} priority 8\n    {% endif %}\n  {% endfor %}\n  #MODE_END_ENABLE\n{% endif %}",
        "promotedTemplateParams": [
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1709066675028,
        "lastUpdateTime": 1709066675028,
        "latestVersionTime": 1709066675028,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "0ae9d0ec-e420-48b8-95bd-26e8bf8a92eb",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AutoNaming-EEM-Scripting",
        "description": "",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{#- Automated Uplink Description Script -#}\n{#- This will always ensure the uplink descriptions are correct to upstream -#}\n{#- Switches within the infrastructure  -#}\n event manager applet update-port authorization bypass\n  event neighbor-discovery interface regexp GigabitEthernet.* cdp add\n  action 101 regexp \"(Switch|Router)\" \"$_nd_cdp_capabilities_string\"\n  action 200 if $_regexp_result eq \"1\"\n  action 201  regexp \"(Trans-Bridge)\" \"$_nd_cdp_capabilities_string\"\n  action 210  if $_regexp_result eq \"1\"\n  action 211   cli command \"enable\"\n  action 212   cli command \"config t\"\n  action 213   cli command \"interface $_nd_local_intf_name\"\n  action 214   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 215   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 216   cli command \"no description\"\n  action 217   cli command \"description AP - $host - $connectedport\"\n  action 220  else\n  action 221   cli command \"enable\"\n  action 222   cli command \"config t\"\n  action 223   cli command \"interface $_nd_local_intf_name\"\n  action 224   regexp \"^([^\\.]+)\\.\" \"$_nd_cdp_entry_name\" match host\n  action 225   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 226   cli command \"no description\"\n  action 227   cli command \"description Link - $host - $connectedport\"\n  action 240  end\n  action 250 else\n  action 251  regexp \"(Phone)\" \"$_nd_cdp_capabilities_string\"\n  action 252  if $_regexp_result eq \"1\"\n  action 253   cli command \"enable\"\n  action 254   cli command \"config t\"\n  action 255   cli command \"interface $_nd_local_intf_name\"\n  action 256   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 257   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 258   cli command \"no description\"\n  action 259   cli command \"description Phone - $host - $connectedport\"\n  action 260  end\n  action 270 end\n  action 280 cli command \"write\"\n!\nevent manager applet POST_PNP authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"clear cdp table\"\n action 2.0 cli command \"config t\"\n action 2.1 cli command \"no event manager applet POST_PNP\"\n action 2.2 cli command \"end\"\n action 2.3 cli command \"wr\"",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{#- Automated Uplink Description Script -#}\n{#- This will always ensure the uplink descriptions are correct to upstream -#}\n{#- Switches within the infrastructure  -#}\n event manager applet update-port authorization bypass\n  event neighbor-discovery interface regexp GigabitEthernet.* cdp add\n  action 101 regexp \"(Switch|Router)\" \"$_nd_cdp_capabilities_string\"\n  action 200 if $_regexp_result eq \"1\"\n  action 201  regexp \"(Trans-Bridge)\" \"$_nd_cdp_capabilities_string\"\n  action 210  if $_regexp_result eq \"1\"\n  action 211   cli command \"enable\"\n  action 212   cli command \"config t\"\n  action 213   cli command \"interface $_nd_local_intf_name\"\n  action 214   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 215   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 216   cli command \"no description\"\n  action 217   cli command \"description AP - $host - $connectedport\"\n  action 220  else\n  action 221   cli command \"enable\"\n  action 222   cli command \"config t\"\n  action 223   cli command \"interface $_nd_local_intf_name\"\n  action 224   regexp \"^([^\\.]+)\\.\" \"$_nd_cdp_entry_name\" match host\n  action 225   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 226   cli command \"no description\"\n  action 227   cli command \"description Link - $host - $connectedport\"\n  action 240  end\n  action 250 else\n  action 251  regexp \"(Phone)\" \"$_nd_cdp_capabilities_string\"\n  action 252  if $_regexp_result eq \"1\"\n  action 253   cli command \"enable\"\n  action 254   cli command \"config t\"\n  action 255   cli command \"interface $_nd_local_intf_name\"\n  action 256   regexp \"^([^\\.]+)\" \"$_nd_cdp_entry_name\" match host\n  action 257   regexp \"^([^\\.]+)\" \"$_nd_port_id\" match connectedport\n  action 258   cli command \"no description\"\n  action 259   cli command \"description Phone - $host - $connectedport\"\n  action 260  end\n  action 270 end\n  action 280 cli command \"write\"\n!\nevent manager applet POST_PNP authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"clear cdp table\"\n action 2.0 cli command \"config t\"\n action 2.1 cli command \"no event manager applet POST_PNP\"\n action 2.2 cli command \"end\"\n action 2.3 cli command \"wr\"",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066675139,
        "lastUpdateTime": 1709066675139,
        "latestVersionTime": 1709066675139,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "f6996697-04a1-4941-8cab-0ee5b6620e28",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "c9300-2-Setup-Configuration",
        "description": "Standard Configuration for VLANs and Host facing ports.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Global Modification #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AAA-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/SystemManagement-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Security-AAA-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Stacking-Configuration\" %}\n!\n{# Interface Configurations #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Interfaces-Macros\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/IBNS2.0-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/APP-Hosting-Configuration\" %}\n!\n{% set uplink_portarray = [] %}\n!\n{% set vlanArray = [] %}\n{{ configure_vlans_svi(SiteAvlansLibrary) }}\n{{ search_vlans(SiteAvlansLibrary) }}\n{{ configure_cts(SiteAvlansLibrary) }}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Templates #}\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[1]) }}\n{{ ibns_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ ibns_workstation(vlanArray[2], vlanArray[3]) }}\n{{ ibns_guest(vlanArray[4]) }} \n{{ autoconf_accesspoint(vlanArray[1]) }}\n{{ autoconf_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ autoconf_workstation(vlanArray[2], vlanArray[3]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = uplink_portarray %}\n!\n{# Select Routed Interfaces #}\n{% for rtinterface in routed_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == rtinterface %}\n      interface {{ interface.portName }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Access Point Interfaces #}\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == apinterface %}\n      default interface {{ interface.portName }}\n      interface {{ interface.portName }}\n       {{ baseconf_interface() }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          default interface {{ interface.portName }}\n          interface {{ interface.portName }}\n            {{ ibns_baseconf_interface() }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{% if \"C93\" in __device.platformId %}\n  {{ APP_Hosting(vlanArray[2]) }}\n{% endif %}\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"propagate sgt\"\n action 2.4 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.5 cli command \"end\"\n action 2.6 cli command \"wr\"\n action 2.7 cli command \"exit\"\n!\n{# Autonaming Configuration #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoNaming-EEM-Scripting\" %}\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 7,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "routed_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Routed Interfaces will be connected. These are existing routed connections that should remain untouched.",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Routed Interfaces",
            "instructionText": null,
            "group": null,
            "order": 8,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}"
          },
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Access Point Interfaces",
            "instructionText": null,
            "group": null,
            "order": 9,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}"
          },
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Global Modification #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AAA-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/SystemManagement-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Security-AAA-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Stacking-Configuration\" %}\n!\n{# Interface Configurations #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Interfaces-Macros\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/IBNS2.0-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/APP-Hosting-Configuration\" %}\n!\n{% set uplink_portarray = [] %}\n!\n{% set vlanArray = [] %}\n{{ configure_vlans_svi(SiteAvlansLibrary) }}\n{{ search_vlans(SiteAvlansLibrary) }}\n{{ configure_cts(SiteAvlansLibrary) }}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Templates #}\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[1]) }}\n{{ ibns_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ ibns_workstation(vlanArray[2], vlanArray[3]) }}\n{{ ibns_guest(vlanArray[4]) }} \n{{ autoconf_accesspoint(vlanArray[1]) }}\n{{ autoconf_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ autoconf_workstation(vlanArray[2], vlanArray[3]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = uplink_portarray %}\n!\n{# Select Routed Interfaces #}\n{% for rtinterface in routed_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == rtinterface %}\n      interface {{ interface.portName }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Access Point Interfaces #}\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == apinterface %}\n      default interface {{ interface.portName }}\n      interface {{ interface.portName }}\n       {{ baseconf_interface() }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          default interface {{ interface.portName }}\n          interface {{ interface.portName }}\n            {{ ibns_baseconf_interface() }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{% if \"C93\" in __device.platformId %}\n  {{ APP_Hosting(vlanArray[2]) }}\n{% endif %}\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"propagate sgt\"\n action 2.4 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.5 cli command \"end\"\n action 2.6 cli command \"wr\"\n action 2.7 cli command \"exit\"\n!\n{# Autonaming Configuration #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoNaming-EEM-Scripting\" %}\n",
        "promotedTemplateParams": [
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Access Point Interfaces",
            "instructionText": null,
            "group": null,
            "order": 9,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}",
            "id": null
          },
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 7,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "routed_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Routed Interfaces will be connected. These are existing routed connections that should remain untouched.",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Routed Interfaces",
            "instructionText": null,
            "group": null,
            "order": 8,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}",
            "id": null
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1709066674551,
        "lastUpdateTime": 1709096873948,
        "latestVersionTime": 1709066674551,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "a6a9d2bb-48cf-4afb-a4e2-f7a88ba89826",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "SystemManagement-Configuration",
        "description": "Global configurations on Target",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# System Management for Catalyst Only #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Sensitive-Info\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n\nno service pad\nservice tcp-keepalives-in\nservice tcp-keepalives-out\nservice timestamps debug datetime msec localtime show-timezone\nservice timestamps log datetime msec show-timezone\nservice password-encryption\nservice sequence-numbers\n!\nip subnet-zero\n!\nlldp run\n!\nport-channel load-balance src-dst-ip\n!\nspanning-tree mode rapid-pvst\nspanning-tree portfast default\nspanning-tree portfast bpduguard default\n!\nlogging buffered 64000 debug\nno logging console\nlogging trap notifications\n!\n{%- include \"DCLOUD CATC Template Lab DayN Jinja2/ACL-Configuration\" -%}\n!\nsnmp-server location {{ snmpLocation }} \n{# snmp-server location {{ __device.snmpLocation }} #}\n!\n{% for snmpCommunityString in snmpCommunityStrings %}\n  snmp-server community {{ snmpCommunityString['string'] }} {{ snmpCommunityString['privilege'] }} 10\n{% endfor %}\n!\n{% for user in users %}\n  username {{ user.name }} priv {{ user.priv }} secret 9 {{ user.key }}\n{% endfor %}\n!\nline con 0\n exec-timeout 15 0\n login authentication admin\n logging synchronous\n authorization exec admin\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 15 0\n login authentication admin\n logging synchronous\n authorization exec admin\n transport input ssh",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# System Management for Catalyst Only #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Sensitive-Info\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n\nno service pad\nservice tcp-keepalives-in\nservice tcp-keepalives-out\nservice timestamps debug datetime msec localtime show-timezone\nservice timestamps log datetime msec show-timezone\nservice password-encryption\nservice sequence-numbers\n!\nip subnet-zero\n!\nlldp run\n!\nport-channel load-balance src-dst-ip\n!\nspanning-tree mode rapid-pvst\nspanning-tree portfast default\nspanning-tree portfast bpduguard default\n!\nlogging buffered 64000 debug\nno logging console\nlogging trap notifications\n!\n{%- include \"DCLOUD CATC Template Lab DayN Jinja2/ACL-Configuration\" -%}\n!\nsnmp-server location {{ snmpLocation }} \n{# snmp-server location {{ __device.snmpLocation }} #}\n!\n{% for snmpCommunityString in snmpCommunityStrings %}\n  snmp-server community {{ snmpCommunityString['string'] }} {{ snmpCommunityString['privilege'] }} 10\n{% endfor %}\n!\n{% for user in users %}\n  username {{ user.name }} priv {{ user.priv }} secret 9 {{ user.key }}\n{% endfor %}\n!\nline con 0\n exec-timeout 15 0\n login authentication admin\n logging synchronous\n authorization exec admin\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 15 0\n login authentication admin\n logging synchronous\n authorization exec admin\n transport input ssh",
        "promotedTemplateParams": [
          {
            "parameterName": "snmpLocation",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1709066674848,
        "lastUpdateTime": 1709066674848,
        "latestVersionTime": 1709066674848,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "9b992454-b989-4574-a529-bb7b3092a4f5",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Sensitive-Info",
        "description": "Sensitive information is Separated from Configurations for ease of management. This is programmed on the switch pragmatically from these objects.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of SNMP V2 Community Strings #}\n{% set snmpCommunityStrings = [\n  {'string':'Test_ro','privilege':'RO'},\n  {'string':'Test_rw','privilege':'RW'}\n  ]%}\n\n{# Dictionaries of User information #}\n{% set users = [\n  {'name':'demouser1','priv':'15','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'},\n  {'name':'demouser2','priv':'3','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'}\n  ]%}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of SNMP V2 Community Strings #}\n{% set snmpCommunityStrings = [\n  {'string':'Test_ro','privilege':'RO'},\n  {'string':'Test_rw','privilege':'RW'}\n  ]%}\n\n{# Dictionaries of User information #}\n{% set users = [\n  {'name':'demouser1','priv':'15','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'},\n  {'name':'demouser2','priv':'3','key':'$9$DwFGXgdsukL4qE$7LI.Kq6vijfo/BkM53McdTrlfS.ou4CmOQ6zYH8iba2'}\n  ]%}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066674328,
        "lastUpdateTime": 1709066674328,
        "latestVersionTime": 1709066674328,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "d92fad01-c7e3-41a2-8b0d-39f9cbc62842",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-Macros",
        "description": "Interface Macros for Host facing ports. Includes Standard Macro set, AutoConf Templates and Macros set, and IBNS 2.0 Templates and Macros set.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# General Interface Macro Section#}\n!\n{# Interface Access Macro #}\n{% macro access_interface(vlan_number) %}\n  switchport access vlan {{ vlan_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Access Point Macro for AP's #}\n{% macro accesspoint(vlan_number) %} \n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Macro for Flex AP's #}\n{% macro flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstations with Voice Macro #}\n{% macro workstation_interface(vlan_number, voice_number) %}\n  description Workstation Interface\n  switchport access vlan {{ vlan_number }}\n  switchport voice vlan {{ voice_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# AutoConf Macro Section #}\n{# AutoConf Base Configuration Macro #}\n{% macro baseconf_interface() %}\n     switchport mode access\n     snmp trap mac-notification change added\n     snmp trap mac-notification change removed\n     source template BASE_AUTOCONF\n{% endmacro %}\n!\n{# Interface Access Point Template to be used with Autoconf for AP's #}\n{% macro autoconf_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Template to be used with Autoconf for Flex AP's #}\n{% macro autoconf_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number}},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstation Template to be used with Autoconf for AP's #}\n{% macro autoconf_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation Interface\n   switchport access vlan {{ vlan_number }}\n   switchport voice vlan {{ voice_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Base Configuration Template to be used with Autoconf for baseconfig's #}\n{% macro autoconf_baseconfig(vlan_number) %} \n  template BASE_AUTOCONF\n   description Base Config\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# IBNS2.0 Macro Section #}\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconf_interface() %}\n  description BASE CONFIG\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n  spanning-tree bpduguard enable\n  source template BASE_IBNS\n{% endmacro %}\n!\n{# Interface Access Point IBNS2.0 Template Macro #}\n{% macro ibns_accesspoint(vlan_number) %} \n  template ACCESS_POINT_IBNS\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface FLex-Access Point IBNS2.0 Template Macro #}\n{% macro ibns_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT_IBNS\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session interface-template sticky timer 30\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface Workstation Access IBNS2.0 Template Macro #}\n{% macro ibns_workstation(vlan_number, voice_number) %} \n  template WORKSTATION_IBNS\n   description Workstation\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   switchport voice vlan {{ voice_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Guest Access IBNS2.0 Template Macro #}\n{% macro ibns_guest(vlan_number) %} \n  template GUEST_IBNS\n   description Guest Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconfig(vlan_number) %} \n  template BASE_IBNS\n   description BASE CONFIG\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# General Interface Macro Section#}\n!\n{# Interface Access Macro #}\n{% macro access_interface(vlan_number) %}\n  switchport access vlan {{ vlan_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Access Point Macro for AP's #}\n{% macro accesspoint(vlan_number) %} \n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Macro for Flex AP's #}\n{% macro flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstations with Voice Macro #}\n{% macro workstation_interface(vlan_number, voice_number) %}\n  description Workstation Interface\n  switchport access vlan {{ vlan_number }}\n  switchport voice vlan {{ voice_number }}\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# AutoConf Macro Section #}\n{# AutoConf Base Configuration Macro #}\n{% macro baseconf_interface() %}\n     switchport mode access\n     snmp trap mac-notification change added\n     snmp trap mac-notification change removed\n     source template BASE_AUTOCONF\n{% endmacro %}\n!\n{# Interface Access Point Template to be used with Autoconf for AP's #}\n{% macro autoconf_accesspoint(vlan_number) %} \n  template ACCESS_POINT\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface FLex-Access Point Template to be used with Autoconf for Flex AP's #}\n{% macro autoconf_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number}},{{ voice_number}},{{ guest_number }}\n   spanning-tree portfast trunk\n{% endmacro %}\n!\n{# Interface Workstation Template to be used with Autoconf for AP's #}\n{% macro autoconf_workstation(vlan_number, voice_number) %} \n  template WORKSTATION\n   description Workstation Interface\n   switchport access vlan {{ vlan_number }}\n   switchport voice vlan {{ voice_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n!\n{# Interface Base Configuration Template to be used with Autoconf for baseconfig's #}\n{% macro autoconf_baseconfig(vlan_number) %} \n  template BASE_AUTOCONF\n   description Base Config\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   spanning-tree portfast\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n{# IBNS2.0 Macro Section #}\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconf_interface() %}\n  description BASE CONFIG\n  switchport mode access\n  snmp trap mac-notification change added\n  snmp trap mac-notification change removed\n  spanning-tree portfast\n  spanning-tree bpduguard enable\n  source template BASE_IBNS\n{% endmacro %}\n!\n{# Interface Access Point IBNS2.0 Template Macro #}\n{% macro ibns_accesspoint(vlan_number) %} \n  template ACCESS_POINT_IBNS\n   description Access Point Interface\n   switchport access vlan {{ vlan_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface FLex-Access Point IBNS2.0 Template Macro #}\n{% macro ibns_flexaccesspoint(vlan_number, data_number, voice_number, guest_number) %} \n  template FLEX_ACCESS_POINT_IBNS\n   description Flex Access Point Interface\n   switchport mode trunk\n   switchport trunk native vlan {{ vlan_number }}\n   switchport trunk allowed vlan {{ vlan_number }},{{ data_number }},{{ voice_number}},{{ guest_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session interface-template sticky timer 30\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   {#ip access-group ACL-DEFAULT in#}\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n{% endmacro %}\n!\n{# Interface Workstation Access IBNS2.0 Template Macro #}\n{% macro ibns_workstation(vlan_number, voice_number) %} \n  template WORKSTATION_IBNS\n   description Workstation\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   switchport voice vlan {{ voice_number }}\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Guest Access IBNS2.0 Template Macro #}\n{% macro ibns_guest(vlan_number) %} \n  template GUEST_IBNS\n   description Guest Interface\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n!\n{# Interface Base Configuration IBNS2.0 Template Macro #}\n{% macro ibns_baseconfig(vlan_number) %} \n  template BASE_IBNS\n   description BASE CONFIG\n   switchport access vlan {{ vlan_number }}\n   switchport mode access\n   dot1x pae authenticator\n   dot1x timeout supp-timeout 7\n   dot1x max-req 3\n   mab\n   access-session closed\n   access-session port-control auto\n   authentication periodic\n   authentication timer reauthenticate server\n   service-policy type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n{% endmacro %}\n\n{# --------------------------------------------------------------- #}\n\n\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066674437,
        "lastUpdateTime": 1709066674437,
        "latestVersionTime": 1709066674437,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "b3eb2cb7-28f7-438f-a6c7-0b8f3bcb98a8",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AAA-Configuration",
        "description": "",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "aaa new-model\n!\naaa authentication username-prompt \"Authorized Username:\"\naaa authentication login admin local\naaa authorization console\naaa authorization exec admin local\naaa authentication login admin local-case\naaa authorization exec admin local \n!\nmac address-table notification mac-move\nmac address-table notification threshold\nmac-address-table notification change\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "aaa new-model\n!\naaa authentication username-prompt \"Authorized Username:\"\naaa authentication login admin local\naaa authorization console\naaa authorization exec admin local\naaa authentication login admin local-case\naaa authorization exec admin local \n!\nmac address-table notification mac-move\nmac address-table notification threshold\nmac-address-table notification change\n!\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066674036,
        "lastUpdateTime": 1709066674036,
        "latestVersionTime": 1709066674036,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "852160d9-84b8-4c4f-bc04-010374322285",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "ACL-Configuration",
        "description": "Configurations for ACLs - includes Objects, configuration examples for pragmatic approaches, and standard approaches",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of ACL's #}\n{% set MgmtAceEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.0','mask':'0.0.0.255'},\n  {'entry':'20','rule':'permit','range':'198.18.133.0','mask':'0.0.0.255'},\n  {'entry':'30','rule':'permit','range':'198.18.134.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'198.18.135.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'198.18.136.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'198.18.137.0','mask':'0.0.0.255'}\n  ]%}\n \n {% set VtyAccessAceEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.0','mask':'0.0.0.255'},\n  {'entry':'20','rule':'permit','range':'198.18.133.0','mask':'0.0.0.255'},\n  {'entry':'30','rule':'permit','range':'198.18.134.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'198.18.135.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'198.18.136.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'198.18.137.0','mask':'0.0.0.255'}\n  ]%}\n{% set AclDefaultEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'198.18.133.27','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'198.18.133.1','mask':'0.0.0.0'}\n  ]%}\n\n{# ACLs Standard Macro - Pragmatically Build Standard ACL from Object #}\n{% macro StandardAcl(name,lists) %}\n  ip access-list standard {{ name }}\n  {% for list in lists %}\n    {{ list['entry'] }} {{ list['rule'] }} {{ list['range'] }} {{ list['mask'] }}\n  {% endfor %}\n{% endmacro %}\n\n{# SNMP ACL #}\n{% macro StandardSnmpLineAcl() %}\n access-list 10 permit 198.18.129.0 0.0.0.255\n access-list 10 permit 198.18.133.0 0.0.0.255\n access-list 10 permit 198.18.134.0 0.0.0.255\n access-list 10 permit 198.18.135.0 0.0.0.255\n access-list 10 permit 198.18.136.0 0.0.0.255\n access-list 10 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# SNMP ACL - Named ACL #}\n{% macro StandardSnmpAcl() %}\nip access-list standard SNMP\n 10 permit 198.18.129.0 0.0.0.255\n 20 permit 198.18.133.0 0.0.0.255\n 30 permit 198.18.134.0 0.0.0.255\n 40 permit 198.18.135.0 0.0.0.255\n 50 permit 198.18.136.0 0.0.0.255\n 60 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL #}\n{% macro StandardVtyLineAcl() %}\n access-list 20 permit 198.18.129.0 0.0.0.255\n access-list 20 permit 198.18.133.0 0.0.0.255\n access-list 20 permit 198.18.134.0 0.0.0.255\n access-list 20 permit 198.18.135.0 0.0.0.255\n access-list 20 permit 198.18.136.0 0.0.0.255\n access-list 20 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL - Named ACL #}\n{% macro StandardVtyAcl() %}\nip access-list standard VTY\n 10 permit 198.18.129.0 0.0.0.255\n 20 permit 198.18.133.0 0.0.0.255\n 30 permit 198.18.134.0 0.0.0.255\n 40 permit 198.18.135.0 0.0.0.255\n 50 permit 198.18.136.0 0.0.0.255\n 60 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# The below example uses the macros above #}\n{{ StandardSnmpLineAcl() }}\n{{ StandardSnmpAcl() }}\n{{ StandardVtyLineAcl() }}\n{{ StandardVtyAcl() }}\n\n{# The below example uses the objects above and macros - Example in comments below #}\n{# ip access-list standard ACL-DEFAULT #}\n{#  10 permit any #}\n{{ StandardAcl(\"ACL-DEFAULT\",AclDefaultEntries) }}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of ACL's #}\n{% set MgmtAceEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.0','mask':'0.0.0.255'},\n  {'entry':'20','rule':'permit','range':'198.18.133.0','mask':'0.0.0.255'},\n  {'entry':'30','rule':'permit','range':'198.18.134.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'198.18.135.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'198.18.136.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'198.18.137.0','mask':'0.0.0.255'}\n  ]%}\n \n {% set VtyAccessAceEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.0','mask':'0.0.0.255'},\n  {'entry':'20','rule':'permit','range':'198.18.133.0','mask':'0.0.0.255'},\n  {'entry':'30','rule':'permit','range':'198.18.134.0','mask':'0.0.0.255'},\n  {'entry':'40','rule':'permit','range':'198.18.135.0','mask':'0.0.0.255'},\n  {'entry':'50','rule':'permit','range':'198.18.136.0','mask':'0.0.0.255'},\n  {'entry':'60','rule':'permit','range':'198.18.137.0','mask':'0.0.0.255'}\n  ]%}\n{% set AclDefaultEntries = [\n  {'entry':'10','rule':'permit','range':'198.18.129.100','mask':'0.0.0.0'},\n  {'entry':'20','rule':'permit','range':'198.18.133.27','mask':'0.0.0.0'},\n  {'entry':'30','rule':'permit','range':'198.18.133.1','mask':'0.0.0.0'}\n  ]%}\n\n{# ACLs Standard Macro - Pragmatically Build Standard ACL from Object #}\n{% macro StandardAcl(name,lists) %}\n  ip access-list standard {{ name }}\n  {% for list in lists %}\n    {{ list['entry'] }} {{ list['rule'] }} {{ list['range'] }} {{ list['mask'] }}\n  {% endfor %}\n{% endmacro %}\n\n{# SNMP ACL #}\n{% macro StandardSnmpLineAcl() %}\n access-list 10 permit 198.18.129.0 0.0.0.255\n access-list 10 permit 198.18.133.0 0.0.0.255\n access-list 10 permit 198.18.134.0 0.0.0.255\n access-list 10 permit 198.18.135.0 0.0.0.255\n access-list 10 permit 198.18.136.0 0.0.0.255\n access-list 10 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# SNMP ACL - Named ACL #}\n{% macro StandardSnmpAcl() %}\nip access-list standard SNMP\n 10 permit 198.18.129.0 0.0.0.255\n 20 permit 198.18.133.0 0.0.0.255\n 30 permit 198.18.134.0 0.0.0.255\n 40 permit 198.18.135.0 0.0.0.255\n 50 permit 198.18.136.0 0.0.0.255\n 60 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL #}\n{% macro StandardVtyLineAcl() %}\n access-list 20 permit 198.18.129.0 0.0.0.255\n access-list 20 permit 198.18.133.0 0.0.0.255\n access-list 20 permit 198.18.134.0 0.0.0.255\n access-list 20 permit 198.18.135.0 0.0.0.255\n access-list 20 permit 198.18.136.0 0.0.0.255\n access-list 20 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# VTY ACL - Named ACL #}\n{% macro StandardVtyAcl() %}\nip access-list standard VTY\n 10 permit 198.18.129.0 0.0.0.255\n 20 permit 198.18.133.0 0.0.0.255\n 30 permit 198.18.134.0 0.0.0.255\n 40 permit 198.18.135.0 0.0.0.255\n 50 permit 198.18.136.0 0.0.0.255\n 60 permit 198.18.137.0 0.0.0.255\n{% endmacro %}\n!\n{# The below example uses the macros above #}\n{{ StandardSnmpLineAcl() }}\n{{ StandardSnmpAcl() }}\n{{ StandardVtyLineAcl() }}\n{{ StandardVtyAcl() }}\n\n{# The below example uses the objects above and macros - Example in comments below #}\n{# ip access-list standard ACL-DEFAULT #}\n{#  10 permit any #}\n{{ StandardAcl(\"ACL-DEFAULT\",AclDefaultEntries) }}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066674152,
        "lastUpdateTime": 1709066674152,
        "latestVersionTime": 1709066674152,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "5ae79707-b38a-4142-92c8-6c30179192f2",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "CATC Template Lab DayN Composite Jinja2",
        "description": "",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": true,
        "containingTemplates": [
          {
            "name": "AAA-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          },
          {
            "name": "SystemManagement-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Global configurations on Target",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          },
          {
            "name": "Security-AAA-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Extraneous AAA Configurations ",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          },
          {
            "name": "Stacking-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          },
          {
            "name": "Interfaces-Configuration",
            "composite": false,
            "language": "JINJA",
            "description": "Standard Configuration for VLANs and Host facing ports.",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          },
          {
            "name": "AutoNaming-EEM-Scripting",
            "composite": false,
            "language": "JINJA",
            "description": "",
            "projectName": "DCLOUD CATC Template Lab DayN Jinja2"
          }
        ],
        "failurePolicy": "CONTINUE_ON_ERROR",
        "language": "VELOCITY",
        "promotedTemplateContent": "[{\"name\":\"AAA-Configuration\",\"id\":\"852160d9-84b8-4c4f-bc04-010374322285\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"\"},{\"name\":\"SystemManagement-Configuration\",\"id\":\"9b992454-b989-4574-a529-bb7b3092a4f5\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Global configurations on Target\"},{\"name\":\"Security-AAA-Configuration\",\"id\":\"801bbb91-bcbc-41c2-9d79-1a84accc002c\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Extraneous AAA Configurations \"},{\"name\":\"Stacking-Configuration\",\"id\":\"0ae9d0ec-e420-48b8-95bd-26e8bf8a92eb\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"\"},{\"name\":\"Interfaces-Configuration\",\"id\":\"e034e329-c289-4d05-9bc1-493196b8984b\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"Standard Configuration for VLANs and Host facing ports.\"},{\"name\":\"AutoNaming-EEM-Scripting\",\"id\":\"f6996697-04a1-4941-8cab-0ee5b6620e28\",\"composite\":false,\"language\":\"JINJA\",\"description\":\"\"}]",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066676305,
        "lastUpdateTime": 1709066676305,
        "latestVersionTime": 1709066676305,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "961b1229-5a85-4263-ac20-49fa2dd997cb",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "AutoConf-Configuration",
        "description": "AutoConf Configuration to enable AutoConf on Target and add parameter map for templates. Please note must be after interface templates are added to Target.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# AutoConf Configurations #}\n!\n{# Enabling Autoconf on switch with interactive command #}\n#INTERACTIVE\nautoconf enable<IQ>yes<R>y\n#END_INTERACTIVE \n!\n{# Augmenting existing hidden parameter map with modifications #}\nparameter-map type subscriber attribute-to-service BUILTIN_DEVICE_TO_TEMPLATE\n 10 map device-type regex \"Cisco-IP-Phone\"\n  20 interface-template WORKSTATION\n 20 map device-type regex \"Cisco-IP-Camera\"\n  20 interface-template WORKSTATION\n 30 map device-type regex \"Cisco-DMP\"\n  20 interface-template WORKSTATION\n 40 map oui eq \"00.0f.44\"\n  20 interface-template WORKSTATION\n 50 map oui eq \"00.23.ac\"\n  20 interface-template WORKSTATION\n 60 map device-type regex \"Cisco-AIR-AP\"\n  20 interface-template FLEX_ACCESS_POINT\n 70 map device-type regex \"Cisco-AIR-LAP\"\n  20 interface-template FLEX_ACCESS_POINT\n 80 map device-type regex \"Cisco-TelePresence\"\n  20 interface-template WORKSTATION\n 90 map device-type regex \"Surveillance-Camera\"\n  10 interface-template WORKSTATION\n 100 map device-type regex \"Video-Conference\"\n  10 interface-template WORKSTATION\n 110 map device-type regex \"Cisco-CAT-LAP\"\n  10 interface-template FLEX_ACCESS_POINT\n 120 map oui eq \"00.24.9b\"\n  10 interface-template WORKSTATION \n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# AutoConf Configurations #}\n!\n{# Enabling Autoconf on switch with interactive command #}\n#INTERACTIVE\nautoconf enable<IQ>yes<R>y\n#END_INTERACTIVE \n!\n{# Augmenting existing hidden parameter map with modifications #}\nparameter-map type subscriber attribute-to-service BUILTIN_DEVICE_TO_TEMPLATE\n 10 map device-type regex \"Cisco-IP-Phone\"\n  20 interface-template WORKSTATION\n 20 map device-type regex \"Cisco-IP-Camera\"\n  20 interface-template WORKSTATION\n 30 map device-type regex \"Cisco-DMP\"\n  20 interface-template WORKSTATION\n 40 map oui eq \"00.0f.44\"\n  20 interface-template WORKSTATION\n 50 map oui eq \"00.23.ac\"\n  20 interface-template WORKSTATION\n 60 map device-type regex \"Cisco-AIR-AP\"\n  20 interface-template FLEX_ACCESS_POINT\n 70 map device-type regex \"Cisco-AIR-LAP\"\n  20 interface-template FLEX_ACCESS_POINT\n 80 map device-type regex \"Cisco-TelePresence\"\n  20 interface-template WORKSTATION\n 90 map device-type regex \"Surveillance-Camera\"\n  10 interface-template WORKSTATION\n 100 map device-type regex \"Video-Conference\"\n  10 interface-template WORKSTATION\n 110 map device-type regex \"Cisco-CAT-LAP\"\n  10 interface-template FLEX_ACCESS_POINT\n 120 map oui eq \"00.24.9b\"\n  10 interface-template WORKSTATION \n!\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066673733,
        "lastUpdateTime": 1709066673734,
        "latestVersionTime": 1709066673734,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "2abdcf81-c7ae-4dfd-93b0-845301d112b0",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "VLAN-Configuration",
        "description": "VLAN Configurations that are required on Target. Various use cases, uplinks with or without port channels, spanning-tree",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Dictionaries of VLANS per Site #}\n{% set SiteAvlans = [\n  {'vlan':'5','name':'mgmtvlan'},\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'999','name':'disabledvlan'}\n  ]%}\n{% set SiteBvlans = [\n  {'vlan':'5','name':'mgmtvlan'},\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'999','name':'disabledvlan'}\n  ]%}\n!\n{# Dictionaries of VLANS per Site with Addressing#}\n{% set SiteAvlansLibrary = [\n  {'vlan':'5','name':'mgmtvlan','ip':'192.168.5.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'10','name':'apvlan','ip':'192.168.10.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'20','name':'datavlan','ip':'192.168.20.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'30','name':'voicevlan','ip':'192.168.30.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'40','name':'guestvlan','ip':'192.168.40.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'999','name':'disabledvlan','ip':'192.168.99.1','mask':'255.255.255.0','dhcp':'198.18.133.1'}\n  ]%}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans_svi(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n    {% if \"mgmtvlan\" in vlanpair['name'] %}\n        pnp startup-vlan {{ vlanpair['vlan'] }}\n    {% else %}\n      int vlan {{ vlanpair['vlan'] }}\n       description {{ vlanpair['name'] }}\n       ip address {{ vlanpair['ip'] }} {{ vlanpair['mask'] }}\n       ip helper-address {{ vlanpair['dhcp'] }}                  \n       ip ospf 1 area 0\n       no shutdown\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO STP with PC Dependencies #}\n{% macro configure_stp_dualuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n    {% elif 'Port-channel' in interface.portName  %}\n      interface {{ interface.portName }} \n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO STP Dependencies #}\n{# This is an example of the configure_stp macro for a single uplink. As the ports are   #}\n{# showing prior to the portchannels it needs two logical constructs and as sort doesn't #}\n{# work. #}\n{% macro configure_stp_singleuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO Vlan Search Function #}\n{% macro search_vlans(vlanpairs) %}\n  {#{% set vlanArray = [] %}#}\n  {% for vlanpair in vlanpairs %}\n    {% if vlanpair['name'] == \"apvlan\" %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif vlanpair['name'] == \"datavlan\"%}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"voice\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"guest\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"disabled\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% else %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Dictionaries of VLANS per Site #}\n{% set SiteAvlans = [\n  {'vlan':'5','name':'mgmtvlan'},\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'999','name':'disabledvlan'}\n  ]%}\n{% set SiteBvlans = [\n  {'vlan':'5','name':'mgmtvlan'},\n  {'vlan':'10','name':'apvlan'},\n  {'vlan':'20','name':'datavlan'},\n  {'vlan':'30','name':'voicevlan'},\n  {'vlan':'40','name':'guestvlan'},\n  {'vlan':'999','name':'disabledvlan'}\n  ]%}\n!\n{# Dictionaries of VLANS per Site with Addressing#}\n{% set SiteAvlansLibrary = [\n  {'vlan':'5','name':'mgmtvlan','ip':'192.168.5.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'10','name':'apvlan','ip':'192.168.10.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'20','name':'datavlan','ip':'192.168.20.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'30','name':'voicevlan','ip':'192.168.30.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'40','name':'guestvlan','ip':'192.168.40.1','mask':'255.255.255.0','dhcp':'198.18.133.1'},\n  {'vlan':'999','name':'disabledvlan','ip':'192.168.99.1','mask':'255.255.255.0','dhcp':'198.18.133.1'}\n  ]%}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO VLAN DB Dependencies #}\n{% macro configure_vlans_svi(vlanpairs)  %}\n  {% for vlanpair in vlanpairs %}\n    vlan {{ vlanpair['vlan'] }}\n    name {{ vlanpair['name'] }}\n    {% if \"mgmtvlan\" in vlanpair['name'] %}\n        pnp startup-vlan {{ vlanpair['vlan'] }}\n    {% else %}\n      int vlan {{ vlanpair['vlan'] }}\n       description {{ vlanpair['name'] }}\n       ip address {{ vlanpair['ip'] }} {{ vlanpair['mask'] }}\n       ip helper-address {{ vlanpair['dhcp'] }}                  \n       ip ospf 1 area 0\n       no shutdown\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n{# MACRO STP with PC Dependencies #}\n{% macro configure_stp_dualuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n    {% elif 'Port-channel' in interface.portName  %}\n      interface {{ interface.portName }} \n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO STP Dependencies #}\n{# This is an example of the configure_stp macro for a single uplink. As the ports are   #}\n{# showing prior to the portchannels it needs two logical constructs and as sort doesn't #}\n{# work. #}\n{% macro configure_stp_singleuplink(vlanpairs) %}\n  {% for interface in __interface %}\n    {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n      interface {{ interface.portName }}\n        switchport trunk allowed vlan add {{ vlanpairs|join(',') }}\n        #INTERACTIVE\n        access-session inherit disable autoconf<IQ>yes<R>y\n        #END_INTERACTIVE \n    {% endif %}\n  {% endfor %}\n{% endmacro %} \n!\n{# MACRO Vlan Search Function #}\n{% macro search_vlans(vlanpairs) %}\n  {#{% set vlanArray = [] %}#}\n  {% for vlanpair in vlanpairs %}\n    {% if vlanpair['name'] == \"apvlan\" %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif vlanpair['name'] == \"datavlan\"%}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"voice\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"guest\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% elif \"disabled\" in vlanpair['name'] %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% else %}\n      {% do vlanArray.append(vlanpair['vlan']) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}\n!\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066673868,
        "lastUpdateTime": 1709096605268,
        "latestVersionTime": 1709066673868,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "509e77df-2726-4103-91df-1b8c0951ec90",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "IBNS2.0-Configuration",
        "description": "IBNS2.0 Policy Configurations to be added to Target. Must be added before Templates use them.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# IBNS configurations build #}\n!\n{# Classifications #}\nclass-map type control subscriber match-all AAA_SVR_DOWN_AUTHD_HOST\n match authorization-status authorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AAA_SVR_DOWN_UNAUTHD_HOST\n match authorization-status unauthorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AUTHC_SUCCESS-AUTHZ_FAIL\n match authorization-status unauthorized\n match result-type success\n!\nclass-map type control subscriber match-all DOT1X\n match method dot1x\n!\nclass-map type control subscriber match-all DOT1X_FAILED\n match method dot1x\n match result-type method dot1x authoritative\n!\nclass-map type control subscriber match-all DOT1X_MEDIUM_PRIO\n match authorizing-method-priority gt 20\n!\nclass-map type control subscriber match-all DOT1X_NO_RESP\n match method dot1x\n match result-type method dot1x agent-not-found\n!\nclass-map type control subscriber match-all DOT1X_TIMEOUT\n match method dot1x\n match result-type method dot1x method-timeout\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-all MAB\n match method mab\n!\nclass-map type control subscriber match-all MAB_FAILED\n match method mab\n match result-type method mab authoritative\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\n{# Policy Maps #}\n{# CLOSED 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CLOSED MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CTS SGACL Enforcement #}\ncts role-based enforcement\n{% macro configure_cts(vlanpairs) %}\n  cts role-based enforcement vlan-list 1,{{ vlanpairs|join(',', attribute='vlan') }}\n{% endmacro %} \n!",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# IBNS configurations build #}\n!\n{# Classifications #}\nclass-map type control subscriber match-all AAA_SVR_DOWN_AUTHD_HOST\n match authorization-status authorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AAA_SVR_DOWN_UNAUTHD_HOST\n match authorization-status unauthorized\n match result-type aaa-timeout\n!\nclass-map type control subscriber match-all AUTHC_SUCCESS-AUTHZ_FAIL\n match authorization-status unauthorized\n match result-type success\n!\nclass-map type control subscriber match-all DOT1X\n match method dot1x\n!\nclass-map type control subscriber match-all DOT1X_FAILED\n match method dot1x\n match result-type method dot1x authoritative\n!\nclass-map type control subscriber match-all DOT1X_MEDIUM_PRIO\n match authorizing-method-priority gt 20\n!\nclass-map type control subscriber match-all DOT1X_NO_RESP\n match method dot1x\n match result-type method dot1x agent-not-found\n!\nclass-map type control subscriber match-all DOT1X_TIMEOUT\n match method dot1x\n match result-type method dot1x method-timeout\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-any IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-all MAB\n match method mab\n!\nclass-map type control subscriber match-all MAB_FAILED\n match method mab\n match result-type method mab authoritative\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\nclass-map type control subscriber match-none NOT_IN_CRITICAL_AUTH_CLOSED_MODE\n match activated-service-template DefaultCriticalAuthVlan_SRV_TEMPLATE\n match activated-service-template DefaultCriticalVoice_SRV_TEMPLATE\n!\n{# Policy Maps #}\n{# CLOSED 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CLOSED MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xClosedAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH_CLOSED_MODE do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# LOW IMPACT MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xLowImpactAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   25 activate service-template DefaultCriticalAccess_SRV_TEMPLATE\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open 1X then MAB Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_1X_MAB\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using dot1x retries 2 retry-time 0 priority 10\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  40 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate dot1x\n   20 terminate mab\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# Open MAB then 1X Template #}\npolicy-map type control subscriber PMAP_DefaultWiredDot1xOpenAuth_MAB_1X\n event session-started match-all\n  10 class always do-until-failure\n   10 authenticate using mab priority 20\n event authentication-failure match-first\n  5 class DOT1X_FAILED do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  10 class AAA_SVR_DOWN_UNAUTHD_HOST do-until-failure\n   30 authorize\n   40 pause reauthentication\n  20 class AAA_SVR_DOWN_AUTHD_HOST do-until-failure\n   10 pause reauthentication\n   20 authorize\n  30 class MAB_FAILED do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n  40 class DOT1X_NO_RESP do-until-failure\n   10 terminate dot1x\n   20 authentication-restart 60\n  50 class DOT1X_TIMEOUT do-until-failure\n   10 terminate dot1x\n   20 authenticate using mab priority 20\n  60 class always do-until-failure\n   10 terminate mab\n   20 terminate dot1x\n   30 authentication-restart 60\n event aaa-available match-all\n  10 class IN_CRITICAL_AUTH do-until-failure\n   10 clear-session\n  20 class NOT_IN_CRITICAL_AUTH do-until-failure\n   10 resume reauthentication\n event agent-found match-all\n  10 class always do-until-failure\n   10 terminate mab\n   20 authenticate using dot1x retries 2 retry-time 0 priority 10\n event inactivity-timeout match-all\n  10 class always do-until-failure\n   10 clear-session\n event authentication-success match-all\n event violation match-all\n  10 class always do-until-failure\n   10 restrict\n event authorization-failure match-all\n  10 class AUTHC_SUCCESS-AUTHZ_FAIL do-until-failure\n   10 authentication-restart 60\n!\n{# CTS SGACL Enforcement #}\ncts role-based enforcement\n{% macro configure_cts(vlanpairs) %}\n  cts role-based enforcement vlan-list 1,{{ vlanpairs|join(',', attribute='vlan') }}\n{% endmacro %} \n!",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066673252,
        "lastUpdateTime": 1709066673252,
        "latestVersionTime": 1709066673252,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "fc73198e-d6c2-438e-9648-6c676df2046d",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Security-AAA-Configuration",
        "description": "Extraneous AAA Configurations ",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Additional AAA commands not added by DNA Center Automation #}\n{# aaa authorization config-commands #}\n{# aaa authorization commands 0 default group tacacs+ local  #}\n{# aaa authorization commands 1 default group tacacs+ local  #}\n{# aaa authorization commands 15 default group tacacs+ local  #}\n!\n{# Default Parameters #}\n{# ip arp entry learn 10240 #}\nip domain retry 1\nip domain timeout 5\nlogin on-success log\nip forward-protocol nd\nno ip http server\nno ip http authentication local\nno ip http secure-server\nip ssh version 2\n!\n{# Banner Configuration #}\n<MLTCMD>\nbanner login ^\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE                                          *\n ******************************************************************\n *                                                                *\n * THIS DEVICE IS PART OF A DEMONSTRATION COMPUTER NETWORK AND IS *\n * PROVIDED FOR OFFICIAL USE BY AUTHORIZED USERS ONLY. ANY        *\n * INFORMATION, DOCUMENTS, OR MATERIALS IN THE NETWORK ARE THE    *\n * PROPERTY OF THIS FIRM. UNAUTHORIZED USE, DUPLICATION, OR       *\n * DISCLOSURE OF INFORMATION OR SYSTEMS IN THIS NETWORK IS        *\n * STRICTLY PROHIBITED BY FEDERAL LAW (18 USC 10130). USE OF THIS *\n * NETWORK CONSTITUTES CONSENT TO MONITORING WHICH MAY BE         *\n * RELEASED TO FIRM MANAGEMENT AND/OR LAW ENFORCEMENT AGENCIES    *\n * AND MAY RESULT IN DISCIPLINARY ACTION, CIVIL ACTION, AND/OR    *\n * CRIMINAL OR CIVIL LITIGATION.                                  *\n *                                                                *\n ******************************************************************\n   Hostname: $(hostname)\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE *\n ******************************************************************\n ^\n</MLTCMD>\n!\nnetconf-yang\n!\n{# VTY and Console Line Modifications #}\nline con 0\n exec-timeout 0 0\n logging synchronous\n stopbits 1\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 30 0\n logging synchronous\n {# timeout login response 300 #}\n {# transport input ssh #}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Additional AAA commands not added by DNA Center Automation #}\n{# aaa authorization config-commands #}\n{# aaa authorization commands 0 default group tacacs+ local  #}\n{# aaa authorization commands 1 default group tacacs+ local  #}\n{# aaa authorization commands 15 default group tacacs+ local  #}\n!\n{# Default Parameters #}\n{# ip arp entry learn 10240 #}\nip domain retry 1\nip domain timeout 5\nlogin on-success log\nip forward-protocol nd\nno ip http server\nno ip http authentication local\nno ip http secure-server\nip ssh version 2\n!\n{# Banner Configuration #}\n<MLTCMD>\nbanner login ^\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE                                          *\n ******************************************************************\n *                                                                *\n * THIS DEVICE IS PART OF A DEMONSTRATION COMPUTER NETWORK AND IS *\n * PROVIDED FOR OFFICIAL USE BY AUTHORIZED USERS ONLY. ANY        *\n * INFORMATION, DOCUMENTS, OR MATERIALS IN THE NETWORK ARE THE    *\n * PROPERTY OF THIS FIRM. UNAUTHORIZED USE, DUPLICATION, OR       *\n * DISCLOSURE OF INFORMATION OR SYSTEMS IN THIS NETWORK IS        *\n * STRICTLY PROHIBITED BY FEDERAL LAW (18 USC 10130). USE OF THIS *\n * NETWORK CONSTITUTES CONSENT TO MONITORING WHICH MAY BE         *\n * RELEASED TO FIRM MANAGEMENT AND/OR LAW ENFORCEMENT AGENCIES    *\n * AND MAY RESULT IN DISCIPLINARY ACTION, CIVIL ACTION, AND/OR    *\n * CRIMINAL OR CIVIL LITIGATION.                                  *\n *                                                                *\n ******************************************************************\n   Hostname: $(hostname)\n ******************************************************************\n * CISCO SYSTEMS EXAMPLE *\n ******************************************************************\n ^\n</MLTCMD>\n!\nnetconf-yang\n!\n{# VTY and Console Line Modifications #}\nline con 0\n exec-timeout 0 0\n logging synchronous\n stopbits 1\nline vty 0 15\n {# access-class 20 in #}\n exec-timeout 30 0\n logging synchronous\n {# timeout login response 300 #}\n {# transport input ssh #}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066673538,
        "lastUpdateTime": 1709066673538,
        "latestVersionTime": 1709066673538,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "801bbb91-bcbc-41c2-9d79-1a84accc002c",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "Interfaces-Configuration",
        "description": "Standard Configuration for VLANs and Host facing ports.",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# Interface Configurations #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Interfaces-Macros\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/IBNS2.0-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/APP-Hosting-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n  {{ configure_cts(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n  {{ configure_cts(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Templates #}\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[1]) }}\n{{ ibns_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ ibns_workstation(vlanArray[2], vlanArray[3]) }}\n{{ ibns_guest(vlanArray[4]) }} \n{{ autoconf_accesspoint(vlanArray[1]) }}\n{{ autoconf_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ autoconf_workstation(vlanArray[2], vlanArray[3]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = uplink_portarray %}\n!\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == apinterface %}\n      default interface {{ interface.portName }}\n      interface {{ interface.portName }}\n       {{ baseconf_interface() }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          default interface {{ interface.portName }}\n          interface {{ interface.portName }}\n            {{ ibns_baseconf_interface() }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{% if \"C93\" in __device.platformId %}\n  {{ APP_Hosting(vlanArray[1]) }}\n{% endif %}\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"propagate sgt\"\n action 2.4 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.5 cli command \"end\"\n action 2.6 cli command \"wr\"\n action 2.7 cli command \"exit\"\n",
        "rollbackTemplateContent": "",
        "templateParams": [
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Access Point Interfaces",
            "instructionText": null,
            "group": null,
            "order": 7,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}"
          },
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": "VLAN Schema for Site",
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 8,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": ""
          }
        ],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# Interface Configurations #}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/Interfaces-Macros\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/VLAN-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/IBNS2.0-Configuration\" %}\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/APP-Hosting-Configuration\" %}\n!\n{% set vlanArray = [] %}\n{% if Site == \"A\" %}\n  {{ configure_vlans(SiteAvlans) }}\n  {{ search_vlans(SiteAvlans) }}\n  {{ configure_cts(SiteAvlans) }}\n{% elif Site == \"B\" %}\n  {{ configure_vlans(SiteBvlans) }}\n  {{ search_vlans(SiteBvlans) }}\n  {{ configure_cts(SiteBvlans) }}\n{% endif %}\n!\n{# Determine whether target is Dual or Single Uplink Target #}\n{% set uplink_portarray = [] %}\n{% for interface in __interface %}\n  {% if interface.portMode == \"trunk\" && interface.interfaceType == \"Physical\" %}\n    {% do uplink_portarray.append(interface.portName) %}\n  {% endif %}\n{% endfor %}\n!\n{% if uplink_portarray | length == 2 %}\n  {{ configure_stp_dualuplink(vlanArray) }}\n{% elif uplink_portarray | length == 1 %}\n  {{ configure_stp_singleuplink(vlanArray) }}\n{% endif %}\n!\n{# Interface Templates #}\n{{ ibns_baseconfig(vlanArray[1]) }}\n{{ ibns_accesspoint(vlanArray[1]) }}\n{{ ibns_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ ibns_workstation(vlanArray[2], vlanArray[3]) }}\n{{ ibns_guest(vlanArray[4]) }} \n{{ autoconf_accesspoint(vlanArray[1]) }}\n{{ autoconf_flexaccesspoint(vlanArray[1], vlanArray[2], vlanArray[3], vlanArray[4]) }} \n{{ autoconf_workstation(vlanArray[2], vlanArray[3]) }}\n{{ autoconf_baseconfig(vlanArray[1]) }}\n!\n{% include \"DCLOUD CATC Template Lab DayN Jinja2/AutoConf-Configuration\" %}\n!\n{# Interface Interations #}\n!\n{# System Variable example interfaces in one logical code construct #}\n{# Select and Configure Access Point interfaces#}\n{% set apintlog = uplink_portarray %}\n!\n{% for apinterface in accesspoint_interfaces %}\n  {% for interface in __interface %}\n    {% if interface.portName in apintlog %}\n    {% elif interface.portName == apinterface %}\n      default interface {{ interface.portName }}\n      interface {{ interface.portName }}\n       {{ baseconf_interface() }}\n      {% do apintlog.append(interface.portName) %}\n    {% endif %}\n  {% endfor %}\n{% endfor %}\n!\n{# Automatically Configure Workstation Remaining interfaces#}\n{% for interface in __interface %}\n  {% if interface.interfaceType == \"Physical\" && interface.portName.replaceAll(\"(^[a-zA-Z]+).*\",\"$1\") == \"GigabitEthernet\"  %}\n    {% if interface.portName.replaceAll(\"(^[a-zA-Z]+.).*\", \"$1\") != \"GigabitEthernet0\" %}\n      {% if interface.portName.replaceAll(\"^[a-zA-Z]+(\\\\d+)/(\\\\d+)/(\\\\d+)\", \"$2\") != 1 %}\n        {% if interface.portName in apintlog %}\n        {% else %}\n          default interface {{ interface.portName }}\n          interface {{ interface.portName }}\n            {{ ibns_baseconf_interface() }}\n        {% endif %}\n      {% endif %}\n    {% endif %}\n  {% endif %}\n{% endfor %}\n!\ninterface GigabitEthernet0/0\n no ip address\n shutdown\n!\n{% if \"C93\" in __device.platformId %}\n  {{ APP_Hosting(vlanArray[1]) }}\n{% endif %}\n!\n{#- Automated Script for cts manual disruptive config -#}\n{#- This will always ensure the uplink get the cts manual for with  -#}\n{#- timed self deleting EEM script  -#}\nevent manager applet POST_CTS_MANUAL authorization bypass\n event timer countdown time 30\n action 1.0 cli command \"enable\"\n action 1.1 cli command \"config t\"\n action 2.0 cli command \"interface range {{ uplink_portarray|join(',') }}\"\n action 2.1 cli command \"cts manual\"\n action 2.2 cli command \"policy static sgt 2 trusted\"\n action 2.3 cli command \"propagate sgt\"\n action 2.4 cli command \"no event manager applet POST_CTS_MANUAL\"\n action 2.5 cli command \"end\"\n action 2.6 cli command \"wr\"\n action 2.7 cli command \"exit\"\n",
        "promotedTemplateParams": [
          {
            "parameterName": "Site",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "The Letter denotes the VLAN Schema\n         AP, Data, Voice, Guest, Disabled\nA = 10,20,30,40,99\nB = 20,30,40,50,99",
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": "VLAN Schema for Site",
            "instructionText": null,
            "group": null,
            "order": 1,
            "customOrder": 0,
            "selection": {
              "selectionType": "SINGLE_SELECT",
              "selectionValues": {
                "A": "A",
                "B": "B"
              },
              "defaultSelectedValues": [
                "A"
              ],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "__device",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 8,
            "customOrder": 0,
            "selection": null,
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "vlan_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 3,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "accesspoint_interfaces",
            "dataType": "STRING",
            "defaultValue": null,
            "description": "Select the ports where Access Points will be connected. All other interfaces will be configured with Host facing connectivity for Workstations and Phones",
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": "Access Point Interfaces",
            "instructionText": null,
            "group": null,
            "order": 7,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "{\"provider\":\"Inventory\",\"attributeToDisplay\":\"portName\",\"params\":[{\"type\":\"MANAGED_DEVICE_UUID\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_IP\",\"scope\":\"RUNTIME\",\"value\":null},{\"type\":\"MANAGED_DEVICE_HOSTNAME\",\"scope\":\"RUNTIME\",\"value\":null}],\"value\":null,\"source\":\"Inventory\",\"entity\":\"Interface\",\"attribute\":\"portName\",\"filterType\":\"regex\",\"filterValue\":\"GigabitEthernet[1-9]/0/[0-9]+\",\"filterByAttribute\":\"portName\"}",
            "id": null
          },
          {
            "parameterName": "data_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 4,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "guest_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 6,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "voice_number",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": false,
            "notParam": true,
            "paramArray": false,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 5,
            "customOrder": 0,
            "selection": {
              "selectionType": null,
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          },
          {
            "parameterName": "__interface",
            "dataType": "STRING",
            "defaultValue": null,
            "description": null,
            "required": true,
            "notParam": false,
            "paramArray": true,
            "displayName": null,
            "instructionText": null,
            "group": null,
            "order": 2,
            "customOrder": 0,
            "selection": {
              "selectionType": "MULTI_SELECT",
              "selectionValues": {},
              "defaultSelectedValues": [],
              "id": null
            },
            "range": [],
            "key": null,
            "provider": null,
            "binding": "",
            "id": null
          }
        ],
        "customParamsOrder": false,
        "createTime": 1709066672863,
        "lastUpdateTime": 1709590311319,
        "latestVersionTime": 1709066672863,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "e034e329-c289-4d05-9bc1-493196b8984b",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      },
      {
        "name": "APP-Hosting-Configuration",
        "description": "APPHosting Configuration to enable TE APP on Target and required configuration. ",
        "tags": [],
        "deviceTypes": [
          {
            "productFamily": "Switches and Hubs",
            "productSeries": "Cisco Catalyst 9300 Series Switches"
          }
        ],
        "softwareType": "IOS",
        "softwareVariant": "XE",
        "templateContent": "{# For APP Hosting APP interface must be enabled #}\n\n{% macro APP_Hosting(vlan_number) %}\n{# Set up one APP port to support environment #}\n{% for interface in __interface %}\n  {% if \"App\" in interface.portName %}\n    interface {{ interface.portName }}\n     switchport trunk allowed vlan {{ vlan_number }}\n     switchport mode trunk\n  {% endif %}\n{% endfor %}\n\n{# Enable IOX functionality required for containers #}\niox\nip http server\nip http secure-server\nip http authentication local\n\n{% endmacro %}\n",
        "rollbackTemplateContent": "",
        "templateParams": [],
        "rollbackTemplateParams": [],
        "composite": false,
        "containingTemplates": [],
        "language": "JINJA",
        "promotedTemplateContent": "{# For APP Hosting APP interface must be enabled #}\n\n{% macro APP_Hosting(vlan_number) %}\n{# Set up one APP port to support environment #}\n{% for interface in __interface %}\n  {% if \"App\" in interface.portName %}\n    interface {{ interface.portName }}\n     switchport trunk allowed vlan {{ vlan_number }}\n     switchport mode trunk\n  {% endif %}\n{% endfor %}\n\n{# Enable IOX functionality required for containers #}\niox\nip http server\nip http secure-server\nip http authentication local\n\n{% endmacro %}\n",
        "promotedTemplateParams": [],
        "customParamsOrder": false,
        "createTime": 1709066673059,
        "lastUpdateTime": 1709066673059,
        "latestVersionTime": 1709066673059,
        "projectName": "DCLOUD CATC Template Lab DayN Jinja2",
        "validationErrors": {
          "templateErrors": [],
          "rollbackTemplateErrors": [],
          "templateId": "5a54e6ad-03b6-4df3-8fa3-58a7e13e1cfa",
          "templateVersion": null
        },
        "projectAssociated": true,
        "documentDatabase": false
      }
    ],
    "isDeletable": true
  }
]